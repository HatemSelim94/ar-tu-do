#!/bin/bash
# super sophisticated control script for nearly everything - functions
# written by Marcel Ebbrecht <marcel.ebbrecht@googlemail.com>

### IMPORTANT: Copy to toad.settings, configure and set CONFIGURED to 1 ###
# preamble
LANG=C
PATH=$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games

# local variables
WORKDIR=$(pwd)

# functions
# hello world
function superSophisticatedHello {
    echo
    echo "Welcome to our super sophisticated control script"
    echo
}

# help message
function toadHelpMain {
    echo "usage: toad.sh help"
    echo "               system help"
    echo "               car help"
    echo "               init help"
}

# help message for system mode
function toadHelpSystem {
    echo "usage: toad.sh system help"
    echo
    echo "       toad.sh system sshkeys [cron]"
    echo "       Overwrites current users authorized keys from"
    echo "       branch given in settings ($BRANCHBUILD)."
    echo "       Add cron argument to suppress confirmation request"
    echo
    echo "       toad.sh system rebuild [cron]"
    echo "       Rebuilds branch given in settings ($BRANCHBUILD)."
    echo "       Add cron argument to suppress confirmation request"
    echo
    echo "       toad.sh system resetbuild [cron]"
    echo "       Resets, pulls and rebuilds branch given in settings ($BRANCHBUILD)."
    echo "       Add cron argument to suppress confirmation request"
    echo
    echo "       toad.sh system run [nogui]"
    echo "       Starts simulation, add nogui argument to disable gazebo client."
}

# help message for car mode
function toadHelpCar {
    echo
    echo "       toad.sh car sshkeys [cron]"
    echo "       Overwrites current users authorized keys from"
    echo "       branch given in settings ($BRANCHBUILD)."
    echo "       Add cron argument to suppress confirmation request"
    echo
    echo "       toad.sh car rebuild [cron]"
    echo "       Rebuilds branch given in settings ($BRANCHBUILD)."
    echo "       Add cron argument to suppress confirmation request"
    echo
    echo "       toad.sh car resetbuild [cron]"
    echo "       Resets, pulls and rebuilds branch given in settings ($BRANCHBUILD)."
    echo "       Add cron argument to suppress confirmation request"
    echo
    echo "       toad.sh car run"
    echo "       Starts software on car."
}

# help message for initializing the system
function toadHelpInit {
    echo "usage: toad.sh init help"
    echo
    echo "       This stuff is hardly untested, please report results or patches" 
    echo
    echo "       toad.sh init system [force]"
    echo "       This will install everything you need on system side."
    echo "       Please ensure, that you're allowed to sudo."
    echo "       Add force argument to suppress compatibility check"
    echo
    echo "       toad.sh init ros [force]"
    echo "       This will install everything you need on ros side."
    echo "       Please ensure, that you're allowed to sudo."
    echo "       Add force argument to suppress compatibility check"
    echo
    echo "       toad.sh init ide"
    echo "       This will install IDEs and provide information about plugins"
}

# get number of active display session
function getActiveDisplay {
    DISPLAY=""
    while read session; do
        set -- $session; tty=$2; display=$3
        if [ "$display" != "-" ]; then
            [ "$DISPLAY" == "" ] && DISPLAY="$display"
            [ "$tty" == "$(cat /sys/class/tty/tty0/active)" ] && DISPLAY="$display";
        fi
    done <<< "$(w -hs)"
    echo "$DISPLAY"
}

# ask user for confirmation
# 1: message to print
# 2: 2nd line of message
function toadConfirmationRequest {
    MESSAGE="$1"
    NEXTLINE="$2"
    echo $MESSAGE
    if [[ $NEXTLINE =~ [0-9A-Za-z] ]]; then
        echo $NEXTLINE
    fi
    echo
    echo "Please press enter to proceed or Ctrl+C to cancel"
    read
}

# ask user for confirmation
# 1: message to print
# 2: 2nd line of message
function toadConfirmationEnter {
    RESULT=""
    MESSAGE="$1"
    NEXTLINE="$2"
    echo $MESSAGE
    if [[ $NEXTLINE =~ [0-9A-Za-z] ]]; then
        echo $NEXTLINE
    fi
    echo
    echo "Please press:"
    echo "    s to skip"
    echo "    p to process commands"
    echo
    echo "followed by enter to proceed or Ctrl+C to cancel"
}

# print system properties for init
function toadInitParameters {
    echo "Distribution:        $DISTRIBUTION"
    echo "Codename:            $CODENAME"
    echo "Version:             $VERSION"
    echo "Forced installation: $FORCED"
    echo
}

# get active branch
function getActiveBranch {
    echo $(git branch | grep "*" | cut -d " " -f 2-)
}