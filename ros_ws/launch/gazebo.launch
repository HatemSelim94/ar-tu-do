<?xml version="1.0" encoding="UTF-8"?>
<launch>
    <arg name="world" default="racetrack_decorated_2"/>
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="debug" default="false"/>
    <arg name="verbose" default="true"/>
    <arg name="use_gpu" default="true"/>
    <arg name="joystick_type" default="xbox360"/>
    <arg name="visualize_lidar" default="false"/>
    <arg name="emergency_stop" default="true"/>

    <!-- Mode Override
        1 forces manual driving
        2 forces autonomous driving
        0 uses user input to enable the modes
    -->
    <arg name="mode_override" default="0"/>

    <param name="world_name" value="$(arg world)"/>

    <include file="$(find racer_world)/launch/racer_gazebo.launch">
        <arg name="world" value="$(arg world)"/>
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="debug" value="$(arg debug)"/>
        <arg name="verbose" value="$(arg verbose)"/>
        <arg name="use_gpu" value="$(arg use_gpu)"/>
        <arg name="visualize_lidar" value="$(arg visualize_lidar)"/>
    </include>

    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find racer_world)/launch/rviz_config.rviz"/>

    <node name="lap_timer" pkg="simulation_tools" type="lap_timer.py" output="screen"/>
    <include file="$(find wallfollowing2)/launch/autonomous_driving.launch"/>

    <group if="$(arg emergency_stop)">
        <include file="$(find emergency_stop)/launch/emergency_stop.launch"/>
    </group>

    <include file="$(find vesc_sim)/launch/vesc_sim.launch"/>
    <include file="$(find car_control)/launch/car_control.launch">
        <arg name="mode_override" value="$(arg mode_override)"/>
    </include>
    <include file="$(find teleoperation)/launch/remote_control.launch">
        <arg name="joystick_type" value="$(arg joystick_type)"/>
    </include>

    <include file="$(find imu_velocity)/launch/car_imu_velocity.launch" />

    <include file="$(find boxing)/launch/boxing.launch">
        <arg name="voxel_size" value="0.2" />
        <arg name="topic_input_cloud" value="/scan/lidar/cartesian" />
        <arg name="topic_voxels" value="/scan/voxels" />
 
        <arg name="filter_by_score_enabled" value="true" />
        <arg name="filter_by_score_minimum_score" value="0.005" />
 
        <arg name="sor_enabled" value="false" />
        <arg name="sor_mean_k" value="2" />
        <arg name="sor_stddev_mul_thresh" value="3.0" />
    </include>
 
    <include file="$(find car_tf)/launch/car_transformer.launch" />

    <node pkg="simulation_tools" type="crash_detector" name="crash_detector" output="screen">
    </node>
    <node pkg="tf" type="static_transform_publisher" name="depth_rotation" args="0.18 0 0.14 -1.570796327 0 -1.570796327 /base_link /camera 10" />
</launch>
