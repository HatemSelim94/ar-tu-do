<?xml version="1.0" encoding="UTF-8"?>
<launch>
    <arg name="joystick_type" default="xbox360"/>

    <!-- Mode Override
        1 forces manual driving
        2 forces autonomous driving
        0 uses user input to enable the modes
    -->
    <arg name="mode_override" default="0"/>

    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find racer_description)/urdf/racer.xacro'"/>

    <include file="$(find car_control)/launch/car_control.launch">
        <arg name="mode_override" value="$(arg mode_override)"/>
    </include>

    <include file="$(find teleoperation)/launch/remote_control.launch">
        <arg name="joystick_type" value="$(arg joystick_type)"/>
    </include>
    
    <!-- zed camera launch file -->
    <include file="./launch/zed.launch"/>

    <include file="$(find emergency_stop)/launch/emergency_stop.launch"/>

    <include file="$(find vesc_driver)/launch/vesc_driver_node.launch"/>

    <rosparam command="load" file="$(find vesc_sim)/config/car_config.yaml"/>

    <include file="$(find vesc_ackermann)/launch/vesc_to_odom_node.launch"/>

    <include file="$(find wallfollowing5)/launch/autonomous_driving_physical.launch"/>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"/>

    <include file="$(find hardware)/launch/static_wheel_publisher.launch"/>
    
    <arg name="show_rviz" default="1"/>
    <group if="$(eval arg('show_rviz') == 1)">
        <node name="rviz" pkg="rviz" type="rviz" args="-d $(find car_control)/launch/car.rviz" />
    </group>

    <node pkg="razor_imu_9dof" type="imu_node.py" name="imu_node">
        <rosparam file="$(find hardware)/razor_imu_config.yaml" command="load"/>
    </node>

    <include file="$(find imu_velocity)/launch/car_imu_velocity.launch" />

    <include file="$(find boxing)/launch/boxing.launch">
        <arg name="voxel_size" value="0.2" />
        <arg name="topic_input_cloud" value="/scan/lidar/cartesian" />
        <arg name="topic_voxels" value="/scan/voxels" />
 
        <arg name="filter_by_score_enabled" value="true" />
        <arg name="filter_by_score_minimum_score" value="0.005" />
 
        <arg name="sor_enabled" value="false" />
        <arg name="sor_mean_k" value="2" />
        <arg name="sor_stddev_mul_thresh" value="3.0" />
    </include>
 
    <include file="$(find car_tf)/launch/car_transformer.launch" />

    <node pkg="urg_node" type="urg_node" name="urg_node">
        <param name="ip_address" value="192.168.1.10"/>
    </node>
</launch>
